<?php

/**
 * Public solr service , as in non-encrypted and listening on a port.
 */
class Provision_Service_solr_public extends Provision_Service_solr {
  protected $has_port = TRUE;

  // The implementation chooses the port.
  function default_port() {
    return FALSE;
  }

  function config_data($config = null, $class = null) {
    $data = parent::config_data($config, $class);
    if (!is_null($this->application_name)) {
      $data['solr_app_path'] = $this->server->solr_app_path;
      $data['solr_homes_path'] = $this->server->solr_homes_path;
      $data['solr_war_path'] = $this->server->solr_war_path;
    }

    $data['solr_port'] = $this->server->solr_port;

    if ($config == 'site') {
      $data = array_merge($data, drush_get_context('site'));
      $data['solr_home'] = $this->server->solr_homes_path . '/' . $this->context->uri;
      $data['solr_config_path'] = $this->context->root . '/' . $this->context->solr_config_path;

      $data['comment'] = dt('This file was automatically generated by provision_solr.  Any changes will be reset on the next verify of this site.');
    }
    return $data;
  }

  function init_server() {
    parent::init_server();

    // application_name is tomcat, jetty, etc
    if (!is_null($this->application_name)) {
      $this->server->solr_app_path = "{$this->server->config_path}/{$this->application_name}";

      // Get war path and solr_homes_path
      $this->server->solr_war_path = drush_get_option('solr_war_path', '/path/to/solr.war');
      $this->server->solr_homes_path = "{$this->server->config_path}/solr";
    }
  }

  static function option_documentation() {
    return array(
      '--solr_war_path' => 'The path to the solr.war file on this server',
    );
  }

  function verify_server_cmd() {
    if (!is_null($this->application_name)) {

      // Create solr application folder (tomcat, etc)
      provision_file()->create_dir($this->server->solr_app_path, dt("Solr Application Folder"), 0700);
      $this->sync($this->server->solr_app_path);

      // Create Solr Homes folder
      provision_file()->create_dir($this->server->solr_homes_path, dt("Solr Homes Folder"), 0700);
      $this->sync($this->server->solr_homes_path);
    }

    parent::verify_server_cmd();
  }

  function verify_site_cmd() {
    parent::verify_site_cmd();
  }


  /**
   * Ask the web server to check for and load configuration changes.
   */
  function parse_configs() {
    return TRUE;
  }
}